# Generated by Django 2.2.8 on 2022-02-28 20:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    replaces = [('candidate', '0001_initial'), ('candidate', '0002_auto_20190204_2226'), ('candidate', '0003_auto_20190204_2245'), ('candidate', '0004_auto_20190204_2310'), ('candidate', '0005_auto_20190205_0313'), ('candidate', '0006_offchallenge_confirmed'), ('candidate', '0007_offchallenge_request_date'), ('candidate', '0008_auto_20190217_0224'), ('candidate', '0009_auto_20190223_0300'), ('candidate', '0010_announcement'), ('candidate', '0011_auto_20190927_0507'), ('candidate', '0012_auto_20191019_1858'), ('candidate', '0013_auto_20191019_1913'), ('candidate', '0014_auto_20191022_2123'), ('candidate', '0015_auto_20191119_2206'), ('candidate', '0016_candidateforms'), ('candidate', '0017_auto_20200211_2122'), ('candidate', '0018_auto_20200211_2133'), ('candidate', '0019_candidateform_visible'), ('candidate', '0020_auto_20200218_2124'), ('candidate', '0021_auto_20200228_1730'), ('candidate', '0022_auto_20200306_1411'), ('candidate', '0023_auto_20200331_1615'), ('candidate', '0024_auto_20210202_0210'), ('candidate', '0025_auto_20210202_0225'), ('candidate', '0026_auto_20210204_0118'), ('candidate', '0027_auto_20211010_0141'), ('candidate', '0028_auto_20211014_1100'), ('candidate', '0029_auto_20220210_2239')]

    initial = True

    dependencies = [
        ('hknweb', '0006_profile_email'),
        ('events', '0015_auto_20201012_1603'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('hknweb', '0013_auto_20210202_0210'),
        ('coursesemester', '0002_auto_20210202_0225'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=150)),
                ('text', models.TextField(blank=True, default='', max_length=2000)),
                ('visible', models.BooleanField(default=False)),
                ('release_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='OffChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=150, verbose_name='title')),
                ('description', models.TextField(blank=True, default='', max_length=2000)),
                ('proof', models.TextField(blank=True, default='', max_length=2000)),
                ('officer', models.ForeignKey(default=None, limit_choices_to={'groups__name': 'officer'}, on_delete=django.db.models.deletion.CASCADE, related_name='given_challenges', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='received_challenges', to=settings.AUTH_USER_MODEL)),
                ('request_date', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('officer_comment', models.TextField(blank=True, default='', max_length=2000)),
                ('csec_confirmed', models.BooleanField(null=True)),
                ('officer_confirmed', models.BooleanField(null=True)),
            ],
            options={
                'verbose_name': 'Officer challenge',
            },
        ),
        migrations.CreateModel(
            name='BitByteActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default='', max_length=2000)),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('participants', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('confirmed', models.BooleanField(null=True)),
                ('proof', models.TextField(default='', max_length=2000)),
            ],
            options={
                'verbose_name_plural': 'Bit Byte Activities',
            },
        ),
        migrations.CreateModel(
            name='CommitteeProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=150)),
                ('duedate', models.DateTimeField(default=django.utils.timezone.now)),
                ('instructions', models.CharField(blank=True, default='', max_length=150)),
                ('visible', models.BooleanField(default=False)),
                ('candidateSemesterActive', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursesemester.Semester')),
            ],
        ),
        migrations.CreateModel(
            name='DuePayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=150)),
                ('duedate', models.DateTimeField(default=django.utils.timezone.now)),
                ('instructions', models.CharField(blank=True, default='', max_length=150)),
                ('visible', models.BooleanField(default=False)),
                ('candidateSemesterActive', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursesemester.Semester')),
            ],
        ),
        migrations.CreateModel(
            name='CandidateForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=150)),
                ('duedate', models.DateTimeField(default=django.utils.timezone.now)),
                ('link', models.CharField(default='', max_length=150)),
                ('visible', models.BooleanField(default=False)),
                ('candidateSemesterActive', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursesemester.Semester')),
            ],
        ),
        migrations.CreateModel(
            name='DuePaymentPaidEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default='')),
                ('duePayment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='candidate.DuePayment')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Due Payment Paid Entries',
            },
        ),
        migrations.CreateModel(
            name='CandidateFormDoneEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default='')),
                ('form', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='candidate.CandidateForm')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Candidate Form Done Entries',
            },
        ),
        migrations.CreateModel(
            name='RequirementHangout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventType', models.CharField(choices=[('officer_hangout', 'Officer Hangouts'), ('officer_challenge', 'Officer Challenges'), ('either', 'Either')], max_length=255)),
                ('numberRequired', models.IntegerField(default=0)),
                ('enable', models.BooleanField(default=False)),
                ('hangoutsDateStart', models.DateTimeField(blank=True, null=True)),
                ('hangoutsDateEnd', models.DateTimeField(blank=True, null=True)),
                ('candidateSemesterActive', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursesemester.Semester')),
            ],
        ),
        migrations.CreateModel(
            name='RequirementMandatory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=False)),
                ('eventsDateStart', models.DateTimeField(blank=True, null=True)),
                ('eventsDateEnd', models.DateTimeField(blank=True, null=True)),
                ('candidateSemesterActive', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursesemester.Semester')),
                ('events', models.ManyToManyField(to='events.Event')),
            ],
        ),
        migrations.CreateModel(
            name='RequirementMergeRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enableTitle', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, default='', max_length=150)),
                ('enable', models.BooleanField(default=False, help_text='Toggle this Merge node (when ON, this will exist as a first node) (Ignored if it is a connected node)')),
                ('multiplier1', models.FloatField(default=1)),
                ('multiplier2', models.FloatField(default=1)),
                ('color', models.CharField(default='#0072c1', max_length=7)),
                ('candidateSemesterActive', models.ForeignKey(help_text='Candidate semester this Merged Requirement will take place (ignored if it is a connected node)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursesemester.Semester')),
                ('event1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event1', to='events.EventType')),
                ('event2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event2', to='events.EventType')),
                ('linkedRequirement', models.ForeignKey(blank=True, help_text='Connect to another Merged Requirement node here (Candidate Semester, Grand Total, and all Enable fields for all subsequent connected nodes will be ignored) (A Cycle will make the Grand Total equal Infinite (higher precidence to Grand Total and weighted total sum))', null=True, on_delete=django.db.models.deletion.SET_NULL, to='candidate.RequirementMergeRequirement')),
                ('enableGrandTotal', models.BooleanField(default=False, help_text='Toggle the "Grant Total" field, which will take over the weighted sum total (otherwise, will use weighted sum total) (only needed for the first node)')),
                ('grandTotal', models.FloatField(default=None, help_text='The grand total points needed from the weighted sum of connected events (only needed for the first node)', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequriementEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numberRequired', models.IntegerField(default=0, help_text='Number of events needed to satisfy this requirement (set to -1 for ALL events of evenType and between the eventsDateStart and eventsDateEnd, if filled)')),
                ('enable', models.BooleanField(default=False)),
                ('eventsDateStart', models.DateTimeField(blank=True, null=True)),
                ('eventsDateEnd', models.DateTimeField(blank=True, null=True)),
                ('candidateSemesterActive', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursesemester.Semester')),
                ('eventType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventType')),
                ('enableTitle', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, default='', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='RequirementBitByteActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=False)),
                ('numberRequired', models.IntegerField(default=0)),
                ('candidateSemesterActive', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='coursesemester.Semester')),
                ('bitByteDateEnd', models.DateTimeField(blank=True, null=True)),
                ('bitByteDateStart', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommitteeProjectDoneEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, default='')),
                ('committeeProject', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='candidate.CommitteeProject')),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Committee Project Done Entries',
            },
        ),
    ]
