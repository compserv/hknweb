# Generated by Django 2.2.8 on 2022-05-05 06:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('candidate', '0002_auto_20220228_1255'), ('candidate', '0003_auto_20220330_0201'), ('candidate', '0004_auto_20220404_1936'), ('candidate', '0005_auto_20220421_0027'), ('candidate', '0006_auto_20220503_1505'), ('candidate', '0007_basereq_eventreq_externalreq_formreq_logistics_miscreq'), ('candidate', '0008_auto_20220503_1636'), ('candidate', '0009_auto_20220503_1641'), ('candidate', '0010_auto_20220503_1657'), ('candidate', '0011_remove_offchallenge_csec_confirmed'), ('candidate', '0012_auto_20220504_2020')]

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('coursesemester', '0002_auto_20210202_0225'),
        ('events', '0008_attendanceform_description'),
        ('candidate', '0001_squashed_0029_auto_20220210_2239'),
    ]

    operations = [
        migrations.AlterField(
            model_name='offchallenge',
            name='request_date',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.RemoveField(
            model_name='requirementmergerequirement',
            name='event1',
        ),
        migrations.RemoveField(
            model_name='requirementmergerequirement',
            name='event2',
        ),
        migrations.RemoveField(
            model_name='requirementmergerequirement',
            name='linkedRequirement',
        ),
        migrations.RemoveField(
            model_name='requirementmergerequirement',
            name='multiplier1',
        ),
        migrations.RemoveField(
            model_name='requirementmergerequirement',
            name='multiplier2',
        ),
        migrations.AlterField(
            model_name='requirementmergerequirement',
            name='grandTotal',
            field=models.FloatField(default=0.0, help_text='The grand total points needed from the weighted sum of connected events (only needed for the first node)'),
        ),
        migrations.RemoveField(
            model_name='candidateformdoneentry',
            name='form',
        ),
        migrations.RemoveField(
            model_name='candidateformdoneentry',
            name='users',
        ),
        migrations.RemoveField(
            model_name='committeeproject',
            name='candidateSemesterActive',
        ),
        migrations.RemoveField(
            model_name='committeeprojectdoneentry',
            name='committeeProject',
        ),
        migrations.RemoveField(
            model_name='committeeprojectdoneentry',
            name='users',
        ),
        migrations.RemoveField(
            model_name='duepayment',
            name='candidateSemesterActive',
        ),
        migrations.RemoveField(
            model_name='duepaymentpaidentry',
            name='duePayment',
        ),
        migrations.RemoveField(
            model_name='duepaymentpaidentry',
            name='users',
        ),
        migrations.CreateModel(
            name='MergeEventsMultiplierEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable', models.BooleanField(default=False, help_text='Toggle this entry')),
                ('multiplier', models.FloatField(default=1)),
            ],
        ),
        migrations.RemoveField(
            model_name='requirementbitbyteactivity',
            name='candidateSemesterActive',
        ),
        migrations.RemoveField(
            model_name='requirementhangout',
            name='candidateSemesterActive',
        ),
        migrations.RemoveField(
            model_name='requirementmandatory',
            name='candidateSemesterActive',
        ),
        migrations.RemoveField(
            model_name='requirementmandatory',
            name='events',
        ),
        migrations.RemoveField(
            model_name='requirementmergerequirement',
            name='candidateSemesterActive',
        ),
        migrations.RemoveField(
            model_name='requriementevent',
            name='candidateSemesterActive',
        ),
        migrations.RemoveField(
            model_name='requriementevent',
            name='eventType',
        ),
        migrations.DeleteModel(
            name='CandidateForm',
        ),
        migrations.DeleteModel(
            name='CandidateFormDoneEntry',
        ),
        migrations.DeleteModel(
            name='CommitteeProject',
        ),
        migrations.DeleteModel(
            name='CommitteeProjectDoneEntry',
        ),
        migrations.DeleteModel(
            name='DuePayment',
        ),
        migrations.DeleteModel(
            name='DuePaymentPaidEntry',
        ),
        migrations.DeleteModel(
            name='MergeEventsMultiplierEntry',
        ),
        migrations.DeleteModel(
            name='RequirementBitByteActivity',
        ),
        migrations.DeleteModel(
            name='RequirementHangout',
        ),
        migrations.DeleteModel(
            name='RequirementMandatory',
        ),
        migrations.DeleteModel(
            name='RequirementMergeRequirement',
        ),
        migrations.DeleteModel(
            name='RequriementEvent',
        ),
        migrations.CreateModel(
            name='BaseReq',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='EventReq',
            fields=[
                ('basereq_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='candidate.BaseReq')),
                ('n', models.PositiveSmallIntegerField()),
                ('event_types', models.ManyToManyField(to='events.EventType')),
            ],
            bases=('candidate.basereq',),
        ),
        migrations.CreateModel(
            name='ExternalReq',
            fields=[
                ('basereq_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='candidate.BaseReq')),
                ('completed', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('candidate.basereq',),
        ),
        migrations.CreateModel(
            name='FormReq',
            fields=[
                ('externalreq_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='candidate.ExternalReq')),
                ('link', models.CharField(max_length=150)),
            ],
            bases=('candidate.externalreq',),
        ),
        migrations.CreateModel(
            name='MiscReq',
            fields=[
                ('externalreq_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='candidate.ExternalReq')),
                ('description', models.TextField(blank=True, default='', max_length=2000)),
            ],
            bases=('candidate.externalreq',),
        ),
        migrations.CreateModel(
            name='Logistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('min_challenges', models.PositiveSmallIntegerField()),
                ('min_hangouts', models.PositiveSmallIntegerField()),
                ('num_interactivities', models.PositiveSmallIntegerField()),
                ('num_bitbyte', models.PositiveSmallIntegerField()),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coursesemester.Semester')),
                ('event_reqs', models.ManyToManyField(blank=True, to='candidate.EventReq')),
                ('form_reqs', models.ManyToManyField(blank=True, to='candidate.FormReq')),
                ('misc_reqs', models.ManyToManyField(blank=True, to='candidate.MiscReq')),
            ],
            options={
                'verbose_name_plural': 'Logistics',
            },
        ),
        migrations.RemoveField(
            model_name='offchallenge',
            name='csec_confirmed',
        ),
        migrations.RemoveField(
            model_name='offchallenge',
            name='description',
        ),
        migrations.RemoveField(
            model_name='offchallenge',
            name='officer_comment',
        ),
    ]
