# Generated by Django 2.2.8 on 2021-12-21 01:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('academicentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='academics.AcademicEntity')),
            ],
            bases=('academics.academicentity',),
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('academicentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='academics.AcademicEntity')),
                ('name', models.TextField(max_length=200)),
                ('abbr', models.TextField(max_length=100)),
            ],
            bases=('academics.academicentity',),
        ),
        migrations.CreateModel(
            name='ICSR',
            fields=[
                ('academicentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='academics.AcademicEntity')),
                ('first_name', models.TextField(max_length=100)),
                ('last_name', models.TextField(max_length=100)),
                ('course_number', models.TextField(max_length=100)),
                ('section_type', models.TextField(max_length=100)),
                ('section_number', models.TextField(max_length=100)),
                ('instructor_type', models.TextField(max_length=100)),
                ('icsr_course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='icsr_course', to='academics.Course')),
                ('icsr_department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='icsr_department', to='academics.Department')),
            ],
            bases=('academics.academicentity',),
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('academicentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='academics.AcademicEntity')),
                ('instructor_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
            bases=('academics.academicentity',),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('academicentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='academics.AcademicEntity')),
            ],
            bases=('academics.academicentity',),
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('academicentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='academics.AcademicEntity')),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1915)])),
                ('year_section', models.TextField(choices=[('Sp', 'Spring'), ('Su', 'Summer'), ('Fa', 'Fall')], max_length=100)),
            ],
            bases=('academics.academicentity',),
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('academicentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='academics.AcademicEntity')),
                ('num_students', models.PositiveIntegerField()),
                ('response_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('is_private', models.BooleanField(default=True)),
                ('survey_icsr', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='survey_icsr', to='academics.ICSR')),
            ],
            bases=('academics.academicentity',),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('academicentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='academics.AcademicEntity')),
                ('question_text', models.TextField(max_length=500)),
                ('inverted', models.BooleanField(default=False)),
                ('range_max', models.IntegerField(default=7)),
                ('rating_value', models.FloatField()),
                ('rating_question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rating_question', to='academics.Question')),
                ('rating_survey', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rating_survey', to='academics.Survey')),
            ],
            bases=('academics.academicentity',),
        ),
        migrations.AddField(
            model_name='icsr',
            name='icsr_instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='icsr_instructor', to='academics.Instructor'),
        ),
        migrations.AddField(
            model_name='icsr',
            name='icsr_semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='icsr_semester', to='academics.Semester'),
        ),
    ]
